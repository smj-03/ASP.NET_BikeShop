@model BikeShop.Models.CreateOrderDto

@{
    ViewData["Title"] = "Utwórz zamówienie";
}
@if (ViewBag.Errors != null)
{
    <div class="alert alert-danger">
        <ul>
            @foreach(var err in (List<string>)ViewBag.Errors)
            {
                <li>@err</li>
            }
        </ul>
    </div>
}
<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post" id="order-form">
    @Html.AntiForgeryToken()
    
    <!-- Dodaj podsumowanie błędów walidacji -->
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div asp-validation-summary="All" class="text-danger mb-3"></div>
    <div id="products-list">
        @for (int i = 0; i < Model.Products.Count; i++)
        {
            <div class="product-item mb-3 border p-3">
                <label asp-for="@Model.Products[i].ProductId">ID Produktu</label>
                <input asp-for="@Model.Products[i].ProductId" class="form-control" />
                <span asp-validation-for="@Model.Products[i].ProductId" class="text-danger"></span>

                <label asp-for="@Model.Products[i].Quantity">Ilość</label>
                <input asp-for="@Model.Products[i].Quantity" type="number" min="1" class="form-control" />
                <span asp-validation-for="@Model.Products[i].Quantity" class="text-danger"></span>
            </div>
        }
    </div>

    <button type="button" id="add-product-btn" class="btn btn-secondary mb-3">Dodaj produkt</button>
    <button type="submit" class="btn btn-primary">Złóż zamówienie</button>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        let productIndex = @Model.Products.Count;

        document.getElementById('add-product-btn').addEventListener('click', function () {
            const container = document.getElementById('products-list');
            const div = document.createElement('div');
            div.classList.add('product-item', 'mb-3', 'border', 'p-3');
            
            // Użyj poprawnego formatu nazw pól z walidacją
            div.innerHTML = `
                <label>ID Produktu</label>
                <input name="Products[${productIndex}].ProductId" 
                       class="form-control" 
                       data-val="true"
                       data-val-required="Pole ID Produktu jest wymagane." />
                <span class="text-danger field-validation-valid" 
                      data-valmsg-for="Products[${productIndex}].ProductId"
                      data-valmsg-replace="true"></span>

                <label>Ilość</label>
                <input name="Products[${productIndex}].Quantity" 
                       type="number" 
                       min="1" 
                       class="form-control"
                       data-val="true"
                       data-val-required="Pole Ilość jest wymagane."
                       data-val-range-min="1"
                       data-val-range="Wartość musi być liczbą dodatnią." />
                <span class="text-danger field-validation-valid" 
                      data-valmsg-for="Products[${productIndex}].Quantity"
                      data-valmsg-replace="true"></span>
            `;

            container.appendChild(div);
            
            // Aktywuj walidację dla nowych pól
            const form = document.getElementById('order-form');
            $.validator.unobtrusive.parse(form);
            
            productIndex++;
        });
    </script>
}
